#!/bin/bash

# Source Material Recovery Strategy Guide
# Handle the rate limiting and failures encountered

echo "üöÄ Source Material Recovery Strategy Guide"
echo "========================================="
echo ""

echo "üìã PHASE 1: TEST ARTICLE RECOVERY ONLY (Skip YouTube)"
echo "This avoids YouTube rate limiting and tests Khan Academy articles"
echo ""
echo "# Test with a small sample first"
echo "python manage.py recover_source_material learningq_research_sample.csv \\"
echo "    --dry-run --limit 5 --skip-youtube"
echo ""
echo "# If successful, process all articles"
echo "python manage.py recover_source_material learningq_research_sample.csv \\"
echo "    --skip-youtube --slow-mode"
echo ""

echo "üìã PHASE 2: RECOVER YOUTUBE VIDEOS WITH SLOW MODE"
echo "Use conservative rate limiting to avoid 'Too Many Requests' errors"
echo ""
echo "# Wait at least 1 hour after Phase 1 to reset any rate limits"
echo "sleep 3600"
echo ""
echo "# Test video recovery with slow mode"
echo "python manage.py recover_source_material learningq_research_sample.csv \\"
echo "    --dry-run --limit 3 --slow-mode"
echo ""
echo "# If successful, process remaining videos"
echo "python manage.py recover_source_material learningq_research_sample.csv \\"
echo "    --slow-mode --force-retry"
echo ""

echo "üìã PHASE 3: VERIFICATION AND CLEANUP"
echo "Check results and retry any remaining failures"
echo ""
echo "# Verify current status"
echo "python manage.py verify_source_material learningq_research_sample_recovered.csv --show-details"
echo ""
echo "# If needed, retry remaining failures with maximum delays"
echo "python manage.py recover_source_material learningq_research_sample_recovered.csv \\"
echo "    --slow-mode --force-retry --limit 10"
echo ""

echo "üìã ALTERNATIVE: MANUAL BATCH PROCESSING"
echo "If rate limiting persists, process in small batches with delays"
echo ""
echo "# Process 5 questions at a time with 1-hour breaks"
echo "for i in {1..7}; do"
echo "    echo \"Processing batch \$i...\""
echo "    python manage.py recover_source_material learningq_research_sample.csv \\"
echo "        --slow-mode --limit 5 --force-retry"
echo "    echo \"Waiting 1 hour before next batch...\""
echo "    sleep 3600"
echo "done"
echo ""

echo "üîß TROUBLESHOOTING SPECIFIC ISSUES:"
echo ""
echo "1. YouTube 'Too Many Requests' (429 errors):"
echo "   - Use --slow-mode (3+ second delays)"
echo "   - Use --limit to process small batches"
echo "   - Wait 1+ hours between runs"
echo "   - Consider using --skip-youtube initially"
echo ""
echo "2. Khan Academy Articles failing:"
echo "   - Check network connectivity"
echo "   - Try --slow-mode for web scraping"
echo "   - Some articles may have changed URLs"
echo ""
echo "3. All recoveries failing:"
echo "   - Run with --dry-run first to test"
echo "   - Check log files for detailed errors"
echo "   - Verify internet connection and DNS"
echo ""

echo "üìä MONITORING PROGRESS:"
echo ""
echo "# Check Django admin for visual progress"
echo "# Look for:"
echo "#   ‚úÖ Green checkmarks = Successfully recovered"
echo "#   ‚ö†Ô∏è  Orange warnings = Still missing"
echo "#   ‚ùå Red X marks = Recovery attempted but failed"
echo ""

echo "üéØ SUCCESS METRICS:"
echo "Based on your data, expect:"
echo "‚Ä¢ Khan Academy Videos: ~70-80% success rate"
echo "‚Ä¢ Khan Academy Articles: ~40-60% success rate (URL changes)"
echo "‚Ä¢ TED-Ed Videos: ~80-90% success rate"
echo "‚Ä¢ Overall target: 60-75% recovery rate (19-24 out of 32 questions)"
echo ""

echo "üí° OPTIMIZATION TIPS:"
echo ""
echo "1. Run during off-peak hours (late night/early morning)"
echo "2. Use stable internet connection"
echo "3. Close other applications using bandwidth"
echo "4. Monitor system resources"
echo "5. Keep terminal/command prompt open during long runs"
echo ""

echo "‚ö†Ô∏è  IMPORTANT NOTES:"
echo ""
echo "‚Ä¢ YouTube API limits reset every hour"
echo "‚Ä¢ Khan Academy may block rapid requests"
echo "‚Ä¢ Some content may no longer be available"
echo "‚Ä¢ Rate limiting is normal and expected"
echo "‚Ä¢ Partial success is still valuable for research"
echo ""

echo "üéâ EXPECTED OUTCOME:"
echo ""
echo "After following this strategy, you should have:"
echo "‚Ä¢ 19-24 questions with recovered source material"
echo "‚Ä¢ 8-13 questions still missing (acceptable for research)"
echo "‚Ä¢ Clear flags in Django admin for easy identification"
echo "‚Ä¢ A research-ready dataset for AI question generation"
echo ""